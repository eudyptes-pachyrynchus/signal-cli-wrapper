#!/bin/sh

# Wrapper for signal-cli, adding convenience and color
# Cam Webb <https://github.com/camwebb/signal-cli-wrapper>

# License: This software depends on GPLv3-licenced software, but via CLI
# and pipes. It therefore counts as independent software (see
# https://www.gnu.org/licenses/gpl-faq.html#MereAggregation).
# This software is however also released under GNU GPLv3. See LICENSE file.

# Installation: 1) make this script executable
#               2) script and signal-cli must be in $PATH

USAGE="Usage: sg [ ids | snd NAME \"message\" | gsnd NAME \"message\" | rcv | cnv NAME ]"

declare -A NUM
declare -A GRP

# Config
CONFIG=~/.config/signal-cli-wrapper/config
CONVERSATIONS=~/.local/share/signal-cli-wrapper/conversations/
PROCMSG="python procmsg.py"
PRINTMSG="python printcnv.py"

# Exit, if there is no config file
if [ ! -f $CONFIG ]
then
    echo -e "  no config file found."
    exit 1
fi

source $CONFIG

# Construct sed substitution for reading ids
SEDSTR="sed -E "
for i in "${!NUM[@]}" # $(seq 0 $((${#NUM[@]} - 1)))
do
    SEDSTR="$SEDSTR -e 's/(\\"${NUM[$i]}")/"$i" \1/g' "
done

# Logfile date format
DATE=`date +"%s000" -u`

listIds () {
    signal-cli -u $MYNUM listIdentities | eval $SEDSTR | sed 's/:.*$//g'
}

genEnvelope () {
echo -n '{"envelope":{"source":"'
echo -n $MYNUM
echo -n '","timestamp":'
echo -n $1
shift
echo -n ',"dataMessage":{"message":"'
echo -n $@
echo -n '"}}}'
}

# Read input

# If no arguments
if [ $# -eq 0 ]
then
    echo -e "  " $USAGE
    exit 1

# get the registered numbers
elif [ $1 == "ids" ]
then
    listIds

# get the latest messages and write to stdout and to logfile
elif [ $1 == "rcv" ]
then
    mkdir -p $CONVERSATIONS
    signal-cli -u $MYNUM receive --json | $PROCMSG

# Send a message to <name> and write to logfile
elif [ $1 == "snd" ]
then
    # as long as the rigth # of arguments
    if [ $# -eq 3 -a -n "${NUM[$2]}" ]
    then
	genEnvelope $DATE $3 >> $CONVERSATIONS${NUM[$2]}
        signal-cli -u $MYNUM send ${NUM[$2]} -m "$3"
    else
        echo -e "  " $USAGE
        exit 1
    fi

# Send a message to the group <name> and write to logfile
elif [ $1 == "gsnd" ]
then
    # as long as the rigth # of arguments
    if [ $# -eq 3 -a -n "${GRP[$2]}" ]
    then
	genEnvelope $DATE $3 >> $CONVERSATIONS${NUM[$2]}
        signal-cli -u $MYNUM send -g ${GRP[$2]} -m "$3"
    else
        echo -e "  " $USAGE
        exit 1
    fi

# Create a conversation from the logfile
elif [ $1 == "cnv" ]
then
    # as long as there is a second argument, the <name>
    if [ $# -eq 2 -a -n "${NUM[$2]}" ]
    then
	$PRINTMSG ${NUM[$2]}
    elif [ $# -eq 2 -a -n "${GRP[$2]}" ]
    then
	$PRINTMSG ${GRP[$2]}
    else
        echo -e "  " $USAGE
        exit 1
    fi
fi
